// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "keys.h"

// Aliases
#define _ &kp
// #define ___ &none
// #define ______ &trans

// Layers
#define DEF  0
#define NAV   1
#define SYM   2
#define AR1   3
#define AR2   4
#define AR3   5
#define NUM   6
#define NA2   7
#define FUN   8
#define SYS   9
#define MYS  10
#define FN2  11

// Constants
#define TAPPING_TERM    300  // tapping-term-ms = <300>;
#define QUICK_TAP_TERM  250  // tapping-term-ms = <300>;
#define COMBO_TIMEOUT_2  50  // timeout-ms for 2 fingers cofbos
#define COMBO_TIMEOUT_3  80  // timeout-ms for 2 fingers combos


/ {

macros {
    lgui: lgui {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
            = <&macro_press &kp LGUI>
            , <&macro_tap &kp Z>
            , <&macro_release &kp LGUI>
            ;
    };
    MOD_MACRO(lg, LGUI)
};

combos {
    
    compatible = "zmk,combos";
    studio_unlock      { key-positions = < 0 1 2 >;             bindings = <&studio_unlock>;    timeout-ms = < COMBO_TIMEOUT_3 >; layers = < DEF >; };

    copy_cut           { key-positions = < KEY_S KEY_F >;       bindings = <&td_copy_cut>;      timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    paste              { key-positions = < KEY_W KEY_R >;       bindings = <&kp LG(V)>;         timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    undo               { key-positions = < KEY_A KEY_F >;       bindings = <&kp LG(Z)>;         timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    redo               { key-positions = < KEY_Q KEY_R >;       bindings = <&kp LS(LG(Z))>;     timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };

    escape_left        { key-positions = < KEY_W KEY_F >;       bindings = <&kp ESC>;           timeout-ms = < COMBO_TIMEOUT_2 >; };
    escape_right       { key-positions = < KEY_I KEY_O >;       bindings = <&kp ESC>;           timeout-ms = < COMBO_TIMEOUT_2 >; };
    enter_left         { key-positions = < KEY_S KEY_D >;       bindings = <&kp ENTER>;         timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    enter_right        { key-positions = < KEY_K KEY_L >;       bindings = <&kp ENTER>;         timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    backspace_left     { key-positions = < KEY_E KEY_F >;       bindings = <&kp BACKSPACE>;     timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    backspace_right    { key-positions = < KEY_J KEY_I >;       bindings = <&kp BACKSPACE>;     timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    alt_backspace_left { key-positions = < KEY_W KEY_E KEY_F >; bindings = <&kp LA(BACKSPACE)>; timeout-ms = < COMBO_TIMEOUT_3 >; layers = < DEF >; };
    alt_backspace_right{ key-positions = < KEY_J KEY_I KEY_O >; bindings = <&kp LA(BACKSPACE)>; timeout-ms = < COMBO_TIMEOUT_3 >; layers = < DEF >; };
    delete_left        { key-positions = < KEY_S KEY_E >;       bindings = <&kp DEL>;           timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    delete_right       { key-positions = < KEY_I KEY_L >;       bindings = <&kp DEL>;           timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    tab_left           { key-positions = < KEY_E KEY_R >;       bindings = <&kp TAB>;           timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    tab_right          { key-positions = < KEY_U KEY_I >;       bindings = <&kp TAB>;           timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
};

behaviors {
    td_copy_cut: tap_dance_copy_cut {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LG(C)>, <&kp LG(X)>;
    };
};

conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
        if-layers = <1 2>;
        then-layer = <3>;
    };
};



keymap {
    compatible = "zmk,keymap";
    default_layer {
        bindings = <
_ Q          _ W          _ E          _ R         _ T             _ Y          _ U          _ I          _ O          _ P
_ A          _ S          _ D          _ F         _ G             _ H          _ J          _ K          _ L          _ SEMI
_ Z          _ X          _ C          _ V         _ B             _ N          _ M          _ COMMA      _ DOT        _ FSLH
                                       _ SPACE     &mo 1         &mo 2      _ LSFT
        >;
    };

    right_layer {
        bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ INSERT   │  1       │  2       │  3       │          │   │ HOME     │ PAGE DN  │ PAGE UP  │ END      │  :       │
            &kp INS    &kp N1     &kp N2     &kp N3     &trans         &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp COLON
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ DELETE   │  4       │  5       │  6       │          │   │ LEFT     │ DOWN     │ UP       │ RIGHT    │  ;       │
            &kp DEL    &kp N4     &kp N5     &kp N6     &trans         &kp LEFT   &kp DOWN   &kp UP   &kp RIGHT   &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CAPS     │  7       │  8       │  9       │  0       │   │          │          │          │          │          │
           &caps_word  &kp N7     &kp N8     &kp N9     &kp N0         &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &kp ESC        &studio_unlock  &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        left_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │  [       │  {       │  }       │          │   │  ^       │  (       │  )       │  ]       │  ~       │
            &trans     &kp LBKT   &kp LBRC   &kp RBRC   &trans         &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT   &kp TILDE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  !       │  @       │  #       │  $       │  %       │   │  *       │  -       │  =       │  \       │  `       │
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH   &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │  &       │  _       │  +       │  │       │          │
            &trans     &trans     &trans     &trans     &trans         &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE   &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │   │          │          │          │          │  RESET   │
           &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0    &trans     &trans     &trans     &trans    &sys_reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │          │          │          │          │BOOTLOADER│
          &bootloader  &trans     &trans     &trans    &bt BT_SEL 1    &trans     &trans     &trans     &trans    &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │ CLEAR BT │PROFILE 2 │   │          │          │          │          │          │
            &trans     &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
