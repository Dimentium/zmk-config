// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Aliases

#define LEFT_HALF   0  1  2  3  4 10 11 12 13 14 20 21 22 23 24 
#define RIGHT_HALF  5  6  7  8  9 15 16 17 18 19 25 26 27 28 29
#define THUMBS     30 31 32 33

// Layers
#define DEF   0
#define NUM   1
#define SYM   2
#define FUN   3

// Constants
#define TAPPING_TERM    300  // tapping-term-ms = <300>;
#define QUICK_TAP_TERM  250  // quick-tap-ms = <300>;
#define COMBO_TIMEOUT_2  50  // timeout-ms for 2 fingers cofbos
#define COMBO_TIMEOUT_3  80  // timeout-ms for 2 fingers combos

// Tune-up built-in behaviors
&sk {
    release-after-ms = <1500>;
    quick-release;
};
&lt {
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP_TERM>;
    flavor = "balanced";
 };
&mt {
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP_TERM>;
    flavor = "balanced";
 };

/ {

combos {
    compatible = "zmk,combos";
    studio_unlock      { key-positions = < 0 1 2 >;  bindings = <&studio_unlock>;    timeout-ms = < COMBO_TIMEOUT_3 >; layers = < FUN >; };

    copy_cut           { key-positions = < 11 13 >;  bindings = <&td_copy_cut>;      timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    paste              { key-positions = < 1 3 >;    bindings = <&kp LG(V)>;         timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    undo               { key-positions = < 10 13 >;  bindings = <&kp LG(Z)>;         timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };
    redo               { key-positions = < 0 3 >;    bindings = <&kp LS(LG(Z))>;     timeout-ms = < COMBO_TIMEOUT_2 >; layers = < DEF >; };

    escape_left        { key-positions = < 1 13 >;   bindings = <&kp ESC>;           timeout-ms = < COMBO_TIMEOUT_2 >; };
    escape_right       { key-positions = < 7 8 >;    bindings = <&kp ESC>;           timeout-ms = < COMBO_TIMEOUT_2 >; };
    enter_left         { key-positions = < 11 12 >;  bindings = <&kp ENTER>;         timeout-ms = < COMBO_TIMEOUT_2 >; };
    enter_right        { key-positions = < 17 18 >;  bindings = <&kp ENTER>;         timeout-ms = < COMBO_TIMEOUT_2 >; };
    backspace_left     { key-positions = < 2 13 >;   bindings = <&kp BACKSPACE>;     timeout-ms = < COMBO_TIMEOUT_2 >; };
    backspace_right    { key-positions = < 16 7 >;   bindings = <&kp BACKSPACE>;     timeout-ms = < COMBO_TIMEOUT_2 >; };
    alt_backspace_left { key-positions = < 1 2 13 >; bindings = <&kp LA(BACKSPACE)>; timeout-ms = < COMBO_TIMEOUT_3 >; };
    alt_backspace_right{ key-positions = < 16 7 8 >; bindings = <&kp LA(BACKSPACE)>; timeout-ms = < COMBO_TIMEOUT_3 >; };
    delete_left        { key-positions = < 11 2 >;   bindings = <&kp DEL>;           timeout-ms = < COMBO_TIMEOUT_2 >; };
    delete_right       { key-positions = < 7 18 >;   bindings = <&kp DEL>;           timeout-ms = < COMBO_TIMEOUT_2 >; };
    tab_left           { key-positions = < 2 3 >;    bindings = <&kp TAB>;           timeout-ms = < COMBO_TIMEOUT_2 >; };
    tab_right          { key-positions = < 6 7 >;    bindings = <&kp TAB>;           timeout-ms = < COMBO_TIMEOUT_2 >; };
};

behaviors {
    td_copy_cut: tap_dance_copy_cut {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LG(C)>, <&kp LG(X)>;
    };
    reset_or_boot: reset_or_boot {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <500>;
        bindings = <&sys_reset>, <&bootloader>;
    };

    hml: home_row_mod_left {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "balanced";
        require-prior-idle-ms = <150>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = < RIGHT_HALF >; // List of keys on the right side of the keyboard
        hold-trigger-on-release;
    };
    hmr: home_row_mod_right {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "balanced";
        require-prior-idle-ms = <150>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = < LEFT_HALF >; // List of keys on the left side of the keyboard
        hold-trigger-on-release;
    };
  };


keymap {
    compatible = "zmk,keymap";

    DEF {
        display-name = "Alpha";
        bindings = <
&kp Q          &kp W          &kp E          &kp R         &kp T           &kp Y          &kp U          &kp I           &kp O          &kp P
&hml LSHFT A   &kp S          &kp D          &kp F         &kp G           &kp H          &kp J          &kp K           &kp L          &hmr RSHFT SEMI
&kp Z          &hml LCTRL X   &hml LALT C    &hml LGUI V   &kp B           &kp N          &hmr RGUI M    &hmr RALT COMMA &hmr RCTRL DOT &kp FSLH
                                             &kp SPACE     &mo 1           &mo 2          &kp ENTER 
        >;
    };

    NUM {
        display-name = "Ext";
        bindings = <
&kp NUBS       &kp SQT        &none          &none         &none           &none          &kp MINUS      &kp EQUAL      &kp LBKT       &kp RBKT
&hml LSHFT N1  &kp N2         &kp N3         &kp N4        &kp N5          &kp N6         &kp N7         &kp N8         &kp N9         &hmr RSHFT N0
&kp GRAVE      &kp LCTRL      &kp LALT       &kp LGUI      &none           &none          &kp RGUI       &kp RALT       &kp RCTRL      &kp BSLH
                                             &kp SPACE     &none           &mo 3          &kp ENTER
        >;
    };

    NAV {
        display-name = "Nav";
        bindings = <
&none          &none          &none          &none         &none           &kp PG_UP      &kp HOME       &kp UP         &kp END        &kp DEL
&kp LSHIFT     &none          &none          &none         &none           &kp PG_DN      &kp LEFT       &kp DOWN       &kp RIGHT      &kp BSPC
&none          &kp LCTRL      &kp LALT       &kp LGUI      &none           &none          &none          &none          &none          &none
                                             &kp SPACE     &mo 3           &none          &kp ENTER
        >;
    };

     FUN {
        display-name = "Fun";
        bindings = <
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3  &reset_or_boot  &reset_or_boot &kp F11        &kp F12        &none          &none
&hml LSHFT F1  &kp F2         &kp F3         &kp F4        &kp F5          &kp F6         &kp F7         &kp F8         &kp F9         &hmr RSHFT F10
&kp GLOBE      &kp LCTRL      &kp LALT       &kp LGUI      &bt BT_CLR      &none          &kp RGUI       &kp RALT       &kp RCTRL      &none
                                             &none         &none           &none          &none
        >;
    };
};
};